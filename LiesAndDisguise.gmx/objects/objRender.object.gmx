<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width=sprite_get_width(sprView)*2;
height=sprite_get_height(sprView);
if(!surface_exists(global.View))
{
    global.View=surface_create(width,height);
    surface_set_target(global.View);
    draw_clear_alpha(c_black,0);
    draw_sprite(sprView,0,width*0.25,0);
    surface_reset_target();
}

var myId=objPlayer.id;

if(surface_exists(global.Surface)&amp;&amp;surface_exists(global.SurfaceActive))
{
    if(global.traitor || objPlayer.mHealth&lt;=0 || true)
    {
        draw_set_blend_mode(bm_normal);
        draw_surface(global.Surface,view_xview[0],view_yview[0]);
        draw_surface(global.SurfaceActive,view_xview[0],view_yview[0]);
    }
    else
    {
        if(!surface_exists(global.Mask))
        {
            global.Mask=surface_create(view_wview[0],view_hview[0]);
        }
        surface_set_target(global.Mask);
        draw_clear_alpha(c_black,0);
        with(objRmParent)
        {
            if(place_meeting(x,y,myId))
            {
                draw_sprite_ext(sprite_index,image_index,x-view_xview[0],y-view_yview[0],1,1.5,0,c_white,1);
            }
        }
        draw_set_blend_mode_ext(bm_dest_alpha,bm_src_alpha);
        //draw_set_blend_mode(bm_subtract);
        var xscale = 1;
        if(objPlayer.image_xscale&lt;0)xscale*=-1;
        draw_surface_ext(global.View,objPlayer.x-((width/2)*xscale)-view_xview[0],(objPlayer.y-(height/2)-view_yview[0]),xscale,1,0,c_white,1);
        surface_reset_target();   
        
        //render active items in cone
        surface_set_target(global.SurfaceActive);
        draw_set_blend_mode_ext(bm_dest_alpha,bm_src_alpha);
        draw_surface(global.Mask,0,0);
        surface_reset_target();
        
        //draw-semi-transparent bg
        surface_set_target(global.Mask);
        draw_set_blend_mode(bm_normal);
        draw_set_alpha(0.5);
        draw_rectangle(0,0,view_wview[0],view_hview[0],false);
        draw_set_alpha(1);
        surface_reset_target();
        
        draw_surface(global.Surface,view_xview[0],view_yview[0]);
        draw_set_blend_mode_ext(bm_dest_color,bm_src_alpha);
        draw_surface(global.Mask,view_xview[0],view_yview[0]);
        draw_set_blend_mode(bm_normal);
        draw_surface(global.SurfaceActive,view_xview[0],view_yview[0]);
    }
    surface_set_target(global.SurfaceActive);
    draw_clear_alpha(c_black,0);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
